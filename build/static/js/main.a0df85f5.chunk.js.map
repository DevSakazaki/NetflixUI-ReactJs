{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","MovieId","type","info","className","results","length","map","item","key","src","poster_path","alt","original_title","console","log","firstDate","Date","first_air_date","genres","i","push","name","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","useState","movieList","setMovieList","FeatureData","setFeatureData","useEffect","Tmdb","list","originals","filter","randomChosen","Math","floor","random","chosen","chosenInfo","loadAll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0df85f5.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n\r\nconst API_KEY = '0b97f7d704bd514ea88b7c45cfbc5de9';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'top rated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items:  await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            }, \r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            }, \r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo: async (MovieId, type) => {\r\n        let info = {};\r\n        if(MovieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${MovieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${MovieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport './MovieRow.css';\r\n\r\n\r\nexport default ({title, items}) => {\r\n    return(\r\n        <div className='movieRow'>\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className='movieRow--list'>\r\n                {items.results.length > 0 && items.results.map((item, key) => (\r\n                    <div key={key} className='movieRow--item'>\r\n                        <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n    console.log(item)\r\n\r\n    let firstDate = new Date(item.first_air_date)\r\n    let genres = [];\r\n    for( let i in item.genres){\r\n        genres.push(item.genres[i].name)\r\n    }\r\n\r\n\r\n    return(\r\n        <section className='featured' style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\r\n        }}>\r\n           <div className='featured--vertical'>\r\n               <div className='featured--horizontal'>\r\n                   <div className='featured--name'>{item.original_name}</div>\r\n                   <div className='featured--info'>\r\n                       <div className='featured--points'>{item.vote_average} pontos</div>\r\n                       <div className='featured--year'>{firstDate.getFullYear()}</div>\r\n                       <div className='featured--seasons'>{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                   </div>\r\n                   <div className='featured--description'>{item.overview}</div>\r\n                   <div className='featured--buttons'>\r\n                        <a href={`/watch/${item.id}`} className='featured--watchbutton'>► Assistir</a>\r\n                        <a href={`/list/add${item.id}`} className='featured--mylistbutton'>+ Minha Lista</a>\r\n                   </div>\r\n                   <div className='featured--genres'>\r\n                       <strong>Gêneros:</strong> {genres.join(', ')}\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        </section>\r\n    );\r\n}","/* eslint-disable import/no-anonymous-default-export */\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css'\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [FeatureData, setFeatureData] = useState(null);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      //Pegando a Lista Total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o Feature\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeatureData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  return(\n  <div className=\"page\">\n\n  {FeatureData &&\n    <FeaturedMovie item={FeatureData}/>\n  }\n\n    <section className=\"lists\">\n      {movieList.map((item, key)=>(\n        <MovieRow key={key} title={item.title} items={item.items}/>\n      ))}\n    </section>\n\n  </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}